buildscript {
    repositories {
        mavenLocal() // cache (USER_HOME/.m2 folder)
        mavenCentral()
    }
}


repositories {
    mavenCentral()
    mavenLocal() // cache (USER_HOME/.m2 folder)

}

apply plugin: 'java'
apply plugin: 'application'

//设置 Java 兼容版本
sourceCompatibility = 1.8

ext.classifier      = ':jdk8' // ':'
ext.quasarVer       = '0.7.10'

configurations {
    quasar
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
    }
}

dependencies {
    compile "co.paralleluniverse:quasar-core:${quasarVer}${classifier}"
    quasar "co.paralleluniverse:quasar-core:${quasarVer}${classifier}@jar"
    
    compile "com.jiefzz:ejoker:0.3.1-Alpha"
    
}

//改变项目默认结构
sourceSets {
    //设置源代码所在目录
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources'] //资源目录
        }
        output.classesDir = file('target/classes')
        output.resourcesDir = file('target/classes')
    }
}
//改变编译目录
buildDir = 'target'

task scanSuspendables() {
	doFirst {
		ant.taskdef(name:'scanSuspendables', classname:'co.paralleluniverse.fibers.instrument.SuspendablesScanner',
		    classpath: "target/classes:${configurations.runtime.asPath}")
		ant.scanSuspendables(
		    auto: false,
		    suspendablesFile: "$sourceSets.main.output.resourcesDir/META-INF/suspendables",
		    supersFile: "$sourceSets.main.output.resourcesDir/META-INF/suspendable-supers",
		    append: true) {
		    fileset(dir: sourceSets.main.output.classesDir)
		}
	}
	doLast {
		File iSrcFile = new File("src/main/resources/metaInf/suspendables")
		File iDestFile = new File("$sourceSets.main.output.resourcesDir/META-INF/suspendables")
		iDestFile << iSrcFile.text
		
		File sSrcFile = new File("src/main/resources/metaInf/suspendable-supers")
		File sDestFile = new File("$sourceSets.main.output.resourcesDir/META-INF/suspendable-supers")
		sDestFile << sSrcFile.text
	}
}

compileJava.dependsOn processResources
compileJava {
    doLast {
        ant.taskdef(name:'instrumentation', classname:'co.paralleluniverse.fibers.instrument.InstrumentationTask', classpath: configurations.compile.asPath)
        ant.instrumentation(verbose:'true', check:'true', debug:'true') {
            fileset(dir: sourceSets.main.output.classesDir)
        }
    }
}